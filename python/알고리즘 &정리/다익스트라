최단경로 알고리즘
-여러개의 노드가 있을때 목적지 노드에서 도착지 노드로 가는 최단 경로를 구해주는 알고리즘이다.
-전제조건 : "음의 간선"이 없어야한다
-실제 GPS소프트웨어의 기본알고리즘으로 채택된다

-개선된 알고리즘
import heapq
import sys
input = sys.stdin.readline
INF = int(1e9)

n,m = map(int,input().split())
start = int(input())

graph = [[] for i in range(n+1)]

distance = [INF]*(n+1)

for _ in range(m):
  a,b,c = map(int,input().split())
  graph[a].append((b,c))

def dijkstra(start):
  q = []
  heapq.heappush(q,(0,start))
  distance[start] = 0

  while q:
    dist,now = heapq.heappop(q)
    if(distance[now] < dist):
      continue
    for i in graph[now]:
      cost = dist + i[1]

      if(cost < distance[i[0]]):
        distance[i[0]] = cost
        heapq.heappush(q,(cost,i[0]))

dijkstra(start)

for i in range(1,n+1):
  if(i == start):
    continue
  if distance[i] == INF:
    print("무한")
  else:
    print(start, '->' , i ,distance[i])