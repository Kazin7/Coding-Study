
class Node:
    def __init__(self,data,prev=None,next=None):
        self.data = data
        self.next = next
        self.prev = prev

class NodeMG:
  def __init__(self):
    self.head = None
    self.tail = None

  #맨뒤에 값을 넣는 함수
  def insert(self,data):
    if(self.head == None):
      self.head = Node(data)
      self.tail = self.head
    else:
      n = self.head
      val = Node(data)
      while(n.next):
        n = n.next
      n.next = val
      val.prev = n
      self.tail = val

  #모든 노드의 값을 출력하는 함수
  def show(self):
    n = self.head
    while(n):
      print(n.data)
      n = n.next

  #특정데이터 앞에 값을 넣는 함수
  def front(self,data,c):
    val = Node(data)
    n = self.head
    if(self.head.data == c):
      self.head.prev = val
      val.next = self.head
      self.head = val
    else:
      while(n.next):
        if(n.next.data == c):
          temp = n.next
          n.next = val
          val.prev = n
          val.next = temp
          temp.prev = val
        n = n.next

    #맨앞부터 탐색하여 값을 찾는 함수
    def searchFront(self,data):
    n = self.head
    if(n == None):
      return False
 
    while(n):
      if(n.data == data):
        return True
      else:
        n = n.next
    return False

  #맨뒤부터 탐색하여 값을 찾는 함수
  def searchLast(self,data):
    n = self.tail
    if(n == None):
      return False
    
    while(n):
      if(n.data == data):
        return True
      n = n.prev
    
    return False
  
  #특정 값 뒤에 삽입하는 함수
  def last(self,data,c):
    val = Node(data)
    n = self.head
    if(self.tail.data == c):
      self.tail.next = val
      val.prev = self.tail

    else:
      while(n):
        if(n.data == c):
          temp = n.next
          n.next = val
          val.prev = n
          val.next = temp
          temp.prev = val
        n = n.next 
