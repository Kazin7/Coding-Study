#모든 노드에서 모든 노드까지의 최단거리를 구하여 저장하는 알고리즘
#시간복잡도는 n^3

INF = int(1e9)

#n은 노드의 갯수, m은 간선의 갯수
n = int(input())
m = int(input())
#그래프를 이차원그래프(n*n)로 생성하고 모두 무한으로 초기화
graph = [[INF] * (n+1) for _ in range(n+1)]

#그래프 중에서 자기자신을 표시하는부분은 0으로 초기화
for a in range(1,n+1):
  for b in range(1,n+1):
    if(a==b):
      graph[a][b] = 0
#간선에 대한 정보를 받아서 초기화
for _ in range(m):
  a,b,c = map(int,input().split())
  graph[a][b] = c

#바로가는 경우와 어디를 거쳐서 가는경우중 값이 더 작은것을 선택하여 그래프에저장
for k in range(1,n+1):
  for a in range(1,n+1):
    for b in range(1,n+1):
      graph[a][b] = min(graph[a][b] , graph[a][k] + graph[k][b])
#모든 그래프의 값을 출력한다
for a in range(1,n+1):
  for b in range(1,n+1):
    if(graph[a][b] == INF):
      print("무한",end=' ')
    else:
      print(graph[a][b],end=' ')

  print()